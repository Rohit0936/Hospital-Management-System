create table admin(aid int primary key auto_increment,Name varchar(100),Contact varchar(10) unique,adminUser_Name
 varchar(100) unique, Admin_Password varchar(100) unique);


------------------------------------------------------------------------------------------------------------------
create table user(uid int primary key auto_increment,UserName varchar(100) unique not null,user_password varchar(100)
unique not null,Role enum('Doctor,Reception'));

------------------------------------------------------------------------------------------------------------------
create table doctor(did int primary key auto_increment,doctor_name varchar(100) unique not null,doctor_email
varchar(100) unique not null,doctor_specialization varchar(100) not null,doctor_contact varchar(10) unique,
doctor_Expreience int not null,Doctor_Image varchar(100),uid int,foreign key(uid) references user(uid)
on delete cascade on update cascade,aid int ,foreign key(aid) references admin(aid) on delete cascade on update cascade);

------------------------------------------------------------------------------------------------------------------

create table nurse(nid int primary key auto_increment,nurse_name varchar(100) not null,nurse_email varchar(100)
unique not null,nurse_contact varchar(10) unique not null,nurse_shift enum('Day,Night'),nurse_image varchar(100));
------------------------------------------------------------------------------------------------------------------

create table reception(rid int primary key auto_increment,reception_name varchar(100) not null,reception_contact
varchar(10) unique not null,reception_email varchar(100) unique not null,uid int,foreign key(uid) references user(uid) 
on delete cascade on update cascade,aid int, foreign key(aid) references admin(aid) on delete cascade on update cascade);
------------------------------------------------------------------------------------------------------------------

create table room(room_id int primary key auto_increment,room_type enum('ICU','AC','General'),room_charges int not null,
room_no int unique,room_status enum('true','false') default('true'));
------------------------------------------------------------------------------------------------------------------

create table patientdetail(pid int primary key auto_increment,patient_name varchar(100) not null,patient_age int not 
null,patient_gender enum('Male','Female'),patient_contact varchar(10) unique not null,patient_issue varchar(100) not null,
admitted_date date not null,discharge_date varchar(100) default('no'),room_id int,foreign key(room_id) references room(room_id)
 on delete cascade on update cascade,nid int,foreign key(nid) references nurse(nid) on delete cascade on update cascade,Did int,foreign 
key(Did) references Doctor(did) on update cascade on delete cascade,Status enum('Admit','Discharge') default('Admit'),bill enum('true','false'));

------------------------------------------------------------------------------------------------------------------

CREATE TABLE medicine (mid INT PRIMARY KEY,medicine_name VARCHAR(100),price DECIMAL(10,2));

INSERT INTO medicine (mid, medicine_name, price)
VALUES 
  (1, 'Paracetamol', 50.00),
  (2, 'Ibuprofen', 65.75),
  (3, 'Amoxicillin', 120.00),
  (4, 'Cetirizine', 55.00),
  (5, 'Azithromycin', 145.00),
  (6, 'Dolo 650', 60.00),
  (7, 'Metformin', 80.50),
  (8, 'Pantoprazole', 110.00),
  (9, 'Aspirin', 95.25),
  (10, 'Ciprofloxacin', 175.00);

------------------------------------------------------------------------------------------------------------------

create table bill(bill_id int primary key auto_increment,pid int, foreign key(pid) references patientdetail(pid) 
on update cascade on delete set null,room_charges int not null,doctor_charges int not null,doctor_name varchar(100),nurse_charges int not null,
medicine_charges int not null,total_amount int not null,billing_date Date not null);
------------------------------------------------------------------------------------------------------------------

create trigger for delete patient that time automatic change room_status.

mysql> create trigger deletepatient after delete on patientdetail
     for each row
     begin
     update room set room_status="true" where room_id=old.room_id;
     end//
--------------------------------------------------------------------------------------------------------------------------------------------------------------

 create trigger updatepatient After update on patientdetail
 for each row
     begin
      IF (OLD.room_id != NEW.room_id) THEN
             UPDATE room SET room_status = 'true' WHERE room_id = OLD.room_id;
             UPDATE room SET room_status = 'false' WHERE room_id = NEW.room_id;
         END IF;
    
         IF (NEW.status = 'Discharge') THEN
             UPDATE room SET room_status = 'true' WHERE room_id = OLD.room_id;
         END IF;
     end //